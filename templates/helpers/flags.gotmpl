{{- /*
    expects a map[string]any with the following keys:
    - Flags: []*kong.Flag
    - Node: *kong.Node
*/}}
{{- define "helpers/flags/table" }}
{{- if gt (len $.Flags) 0 }}
{{- $rows := slice (slice "Flag(s)" "Env vars" "Type" "Help") }}
{{- range $.Flags }}
{{- $slug := slug (printf "flag-%s%s" (bool_or $.Node.Path (printf "%s-" $.Node.Path) "") .Name) }}
{{- $rows = slice_append $rows (
    slice
        (
            printf "<a id=%q></a>[ðŸ”—](#%s) %s%s%s"
                $slug
                $slug
                (quote_code .String)
                ((bool_or .Required "<br>**required: true**" ""))
                (
                    bool_or
                        .EnumSlice
                        (printf "<br><br>**flag options**:<br>%s" (html_list (quote_code .EnumSlice)))
                        ""
                )
        )
        (or (join (quote_code .Envs) "<br>") "-")
        (bold (sanitize_md .Target.Kind))
        (sanitize_md .Help)
) }}
{{- end }}
{{- table $rows false }}
{{- end }}{{- /* end: if */}}
{{- end }}{{- /* end: define "helpers/flags/table" */}}
